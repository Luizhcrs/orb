<Window x:Class="OrbAgent.Frontend.Windows.ChatWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Orb Chat"
        Width="380" Height="512"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Topmost="True"
        ShowInTaskbar="False"
        ResizeMode="NoResize">
    
    <Window.Resources>
        <!-- Easing Functions -->
        <CubicEase x:Key="EaseInOut" EasingMode="EaseInOut"/>
        
        <!-- SCROLLBAR CUSTOMIZADO (igual ao Electron) -->
        <Style x:Key="CustomScrollBarStyle" TargetType="ScrollBar">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Width" Value="4"/>
            <Setter Property="Background" Value="#1AFFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" CornerRadius="2"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.Thumb>
                                    <Thumb x:Name="PART_Thumb">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Border Background="#4DFFFFFF" CornerRadius="2">
                                                    <Border.Style>
                                                        <Style TargetType="Border">
                                                            <Setter Property="Background" Value="#4DFFFFFF"/>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#80FFFFFF"/>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                </Border>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Gradient para Background Liquid Glass -->
        <SolidColorBrush x:Key="GlassBackground" Color="#D9141416" Opacity="0.85"/>
        
        <!-- Gradient para Reflexos Internos -->
        <RadialGradientBrush x:Key="TopReflection">
            <GradientStop Color="#08FFFFFF" Offset="0"/>
            <GradientStop Color="Transparent" Offset="0.5"/>
        </RadialGradientBrush>
        
        <RadialGradientBrush x:Key="BottomReflection">
            <GradientStop Color="#05FFFFFF" Offset="0"/>
            <GradientStop Color="Transparent" Offset="0.5"/>
        </RadialGradientBrush>
        
        <!-- Estilo para Botões da Title Bar (Expand) -->
        <Style x:Key="ExpandButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#40FFFFFF" Offset="0"/>
                        <GradientStop Color="#26FFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#4DFFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="16">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="16" ShadowDepth="4" Opacity="0.2"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#59FFFFFF" Offset="0"/>
                                            <GradientStop Color="#40FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="BorderBrush" Value="#66FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Estilo para Botão Close (vermelho) -->
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#4DFF6464" Offset="0"/>
                        <GradientStop Color="#33FF6464" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#66FF6464"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="16">
                            <Border.Effect>
                                <DropShadowEffect Color="#FF6464" BlurRadius="16" ShadowDepth="4" Opacity="0.3"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#66FF6464" Offset="0"/>
                                            <GradientStop Color="#4DFF6464" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="BorderBrush" Value="#80FF6464"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Estilo para TextBox Glass -->
        <Style x:Key="GlassTextBoxStyle" TargetType="TextBox">
            <Setter Property="CaretBrush" Value="White"/>
            <Setter Property="SelectionBrush" Value="#4DFFFFFF"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="12">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                         Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Estilo para Botão Enviar (Liquid Glass) -->
        <Style x:Key="SendButtonStyle" TargetType="Button">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#40FFFFFF" Offset="0"/>
                        <GradientStop Color="#33FFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#4DFFFFFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="12">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="12" ShadowDepth="2" Opacity="0.3"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#59FFFFFF" Offset="0"/>
                                            <GradientStop Color="#4DFFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="border" Property="BorderBrush" Value="#66FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#33FFFFFF" Offset="0"/>
                                            <GradientStop Color="#26FFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <!-- Container Principal com Acrylic Nativo do Windows 11 -->
    <Border x:Name="ChatContainer"
            Background="#33141416"
            BorderBrush="#14FFFFFF"
            BorderThickness="1"
            CornerRadius="8"
            Opacity="0"
            ClipToBounds="True">
        
        <!-- Sombras Externas (Apple-style) -->
        <Border.Effect>
            <DropShadowEffect Color="Black" 
                             BlurRadius="24" 
                             ShadowDepth="8" 
                             Opacity="0.4"/>
        </Border.Effect>
        
        <!-- Conteúdo do Chat -->
        <Grid Background="Transparent">
            
            <!-- Custom Title Bar (Área Drag + Botões) -->
            <Border Height="40"
                    VerticalAlignment="Top"
                    Background="Transparent"
                    MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
                <Grid>
                    <!-- Botões da Title Bar (direita) -->
                    <StackPanel Orientation="Horizontal"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Margin="0,0,12,0">
                        <!-- Botão Expandir -->
                        <Button x:Name="ExpandBtn"
                               Width="24" Height="24"
                               Margin="0,0,8,0"
                               Click="ExpandBtn_Click"
                               Style="{StaticResource ExpandButtonStyle}"
                               ToolTip="Expandir chat">
                            <Path Data="M0,0 L8,0 L8,8 L0,8 Z"
                                  Stroke="#E6FFFFFF"
                                  StrokeThickness="1"
                                  Width="8" Height="8"/>
                        </Button>
                        
                        <!-- Botão Fechar -->
                        <Button x:Name="CloseBtn"
                               Width="24" Height="24"
                               Click="CloseBtn_Click"
                               Style="{StaticResource CloseButtonStyle}"
                               ToolTip="Fechar (ESC)">
                            <Path Data="M0,0 L8,8 M8,0 L0,8"
                                  Stroke="#FF9696"
                                  StrokeThickness="1"
                                  Width="8" Height="8"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
            
            <!-- Área de Conteúdo -->
            <Grid Margin="0,40,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <!-- Área de Mensagens -->
                <ScrollViewer x:Name="MessagesScrollViewer"
                             Grid.Row="0"
                             VerticalScrollBarVisibility="Auto"
                             HorizontalScrollBarVisibility="Disabled"
                             Padding="16">
                    <ScrollViewer.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource CustomScrollBarStyle}"/>
                    </ScrollViewer.Resources>
                    <StackPanel x:Name="MessagesPanel">
                        <!-- Mensagens serão adicionadas aqui dinamicamente -->
                    </StackPanel>
                </ScrollViewer>
                
                <!-- Área de Input -->
                <Border Grid.Row="1"
                       Background="#0DFFFFFF"
                       BorderBrush="#14FFFFFF"
                       BorderThickness="0,1,0,0"
                       Padding="16"
                       CornerRadius="0,0,8,8">
                    <StackPanel>
                        
                        <!-- Preview da Imagem Capturada -->
                        <Border x:Name="ImagePreviewContainer"
                               Background="#14FFFFFF"
                               BorderBrush="#1AFFFFFF"
                               BorderThickness="1"
                               CornerRadius="8"
                               Margin="0,0,0,8"
                               Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Imagem Preview -->
                                <Image x:Name="ImagePreview"
                                      Grid.Row="0"
                                      MaxHeight="120"
                                      MaxWidth="200"
                                      Margin="8"
                                      Stretch="Uniform"
                                      HorizontalAlignment="Center"/>
                                
                                <!-- Botão Remover -->
                                <Button Grid.Row="1"
                                       Content="Remover"
                                       Background="Transparent"
                                       Foreground="#CCFFFFFF"
                                       BorderThickness="0"
                                       FontSize="12"
                                       Margin="0,0,0,4"
                                       HorizontalAlignment="Center"
                                       Click="RemoveImage_Click">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <TextBlock Text="{TemplateBinding Content}"
                                                      Foreground="{TemplateBinding Foreground}"/>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </Grid>
                        </Border>
                        
                        <!-- Input Container -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Input de Texto -->
                            <TextBox x:Name="MessageInput"
                                    Grid.Column="0"
                                Background="#14FFFFFF"
                                Foreground="White"
                                BorderBrush="#1AFFFFFF"
                                BorderThickness="1"
                                Padding="12,8"
                                FontSize="14"
                                VerticalAlignment="Center"
                                TextWrapping="Wrap"
                                AcceptsReturn="False"
                                MaxHeight="80"
                                KeyDown="MessageInput_KeyDown"
                                Style="{StaticResource GlassTextBoxStyle}">
                            <TextBox.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="12"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        
                        <!-- Botão Enviar -->
                        <Button x:Name="SendBtn"
                               Grid.Column="1"
                               Width="40" Height="40"
                               Margin="8,0,0,0"
                               Click="SendBtn_Click"
                               Style="{StaticResource SendButtonStyle}">
                            <TextBlock Text="→" 
                                      FontSize="20" 
                                      FontWeight="Bold"
                                      Foreground="White"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Button>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </Border>
        
        <!-- Trigger para animação de entrada -->
        <Window.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <!-- Fade in + Scale + Blur -->
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       From="0" To="1" Duration="0:0:0.8"
                                       EasingFunction="{StaticResource EaseInOut}"/>
        </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
</Window>

